{
  "contractName": "SquareVerifier",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/repo/blockchain_real_state_marketplace/contracts/SolnSquareVerifier.sol\":\"SquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/repo/blockchain_real_state_marketplace/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x52ed254b64c6e0a2a82d59e31abdf47241ba778b15ae866a13cff62484f9d061\",\"urls\":[\"bzzr://8bd8d4067f41ecb6e81023b78acd7294f397dbcb7ae23ee1b24ecd8d104a442b\"]},\"/D/repo/blockchain_real_state_marketplace/contracts/Oraclize.sol\":{\"keccak256\":\"0xadfb22998acd4787b9d6bc276fb3c35f717f3e34fe7164e09c69d39caecd1c18\",\"urls\":[\"bzzr://e4336fde771577399b96920d26bb7268c202f2aac22a26be9b1df471d99141ba\"]},\"/D/repo/blockchain_real_state_marketplace/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x115c934bd4b75569c1247f1c81a6b85d5c2180f857fb36a6c764c015c64b77f4\",\"urls\":[\"bzzr://4bf15e0c1abd986601c20ceb5eccbe4013762bc6d6c5da0a86e130423873d694\"]},\"/D/repo/blockchain_real_state_marketplace/contracts/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x8c5ce486b8e06675b238ec277cb46e006d1573cff239881763788be976321019\",\"urls\":[\"bzzr://aece9e0131a43ea5999910666f23cef0c07ef25bd48ddefd949e264bc9e7de41\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xe6553c347bc848e50d557bd9a716d9dafbfcc50be8393789e89c9de39c6b3a99\",\"urls\":[\"bzzr://b75bc55f84414f34c2a13bf2c9b9f801bc258dcf82a4adb730a35d327ef0d108\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xbdf685605d19992ae87b726eab98d39b6f80a203bc1cd0ee6809b16144367a6d\",\"urls\":[\"bzzr://fb1b480a9444171c67e6d3ed1110dba5d1c1ffd6bffe9e393cc3724ffed3b0ad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzzr://63fc4af0d7a99a770925b96a6cf48f25fc00d30274266f82db05f30baa238267\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506111a7806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063621e9ec014610046575b600080fd5b34801561005257600080fd5b506101b2600480360361014081101561006a57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561011f578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100cb565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101cc565b604051808215151515815260200191505060405180910390f35b60006101d6611017565b60408051908101604052808760006002811015156101f057fe5b6020020151815260200187600160028110151561020957fe5b602002015181525081600001819052506040805190810160405280604080519081016040528088600060028110151561023e57fe5b6020020151600060028110151561025157fe5b6020020151815260200188600060028110151561026a57fe5b6020020151600160028110151561027d57fe5b6020020151815250815260200160408051908101604052808860016002811015156102a457fe5b602002015160006002811015156102b757fe5b602002015181526020018860016002811015156102d057fe5b602002015160016002811015156102e357fe5b60200201518152508152508160200181905250604080519081016040528085600060028110151561031057fe5b6020020151815260200185600160028110151561032957fe5b602002015181525081604001819052506060600260405190808252806020026020018201604052801561036b5781602001602082028038833980820191505090505b50905060008090505b60028110156103b957848160028110151561038b57fe5b6020020151828281518110151561039e57fe5b90602001906020020181815250508080600101915050610374565b5060006103c68284610474565b1415610465577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001807f5472616e73616374696f6e207375636365737366756c6c79207665726966696581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390a160019250505061046c565b6000925050505b949350505050565b600061047e61104c565b6104866105b1565b9050806080015151600185510114151561049f57600080fd5b6104a7611095565b6040805190810160405280600081526020016000815250905060008090505b855181101561052657610517826105128560800151600185018151811015156104eb57fe5b90602001906020020151898581518110151561050357fe5b90602001906020020151610a0b565b610aa7565b915080806001019150506104c6565b5061054d818360800151600081518110151561053e57fe5b90602001906020020151610aa7565b90506105938460000151856020015161056584610b64565b85604001516105778960400151610b64565b87606001516105898960000151610b64565b8960200151610c00565b15156105a4576001925050506105ab565b6000925050505b92915050565b6105b961104c565b60408051908101604052807f13f53406058f52746505e092bd1e714045ccf39e47d36ee129136b2c7ef7983981526020017f208528dd56e7018b9128fb7e98f0af698804635eccfd91e104d7776f90c8aa0f8152508160000181905250604080519081016040528060408051908101604052807f07af5170a88240e85dd4e0fdb594743a81e76ed92df4f5aa2588f1d7c8273e6e81526020017f13db7f385f56fbf7812c53ae09f3b747c5bde2b4cc1c3a5774e32a8799052642815250815260200160408051908101604052807f2252e63dad32f7b11ceef673419cecfd6626abc259c5b82b081ca3407367996d81526020017f2114d50485c56484852204bd4c5911ec61368e73cb285195bd1c200d3405787f8152508152508160200181905250604080519081016040528060408051908101604052807f1c8f78927b70448a5c6fbbf3eba1218cd5a61ee120a761951def863cd52b043d81526020017f01c33faf03dde880ea6bf3793b47ca49305270394b5b2fbb8815521e89e10cb4815250815260200160408051908101604052807f054a3917ea3b4d5e677164427fab7476ad059f82db7df037ff9678d561435c9481526020017f27efcefee3e2a23a871e4eebd141f908943a0eb9e5ebf45e39b971629ca08e638152508152508160400181905250604080519081016040528060408051908101604052807f1e6e877b990fcd78671eea9b49e3c5665efe2b4261a9eea559fd72d8f3d188ae81526020017f19f623c476e99915b85aa1db9ec91770763db371970bf5b574f981e71866939b815250815260200160408051908101604052807f01d5e8921f3bb9d95452e37bd32bd2d83b0c3cac2bfa95b13ab627a9410329a781526020017f2fb4c41ad9b75086dc8d58983085c44901138c1032cd71b79ec1da9484a48101815250815250816060018190525060036040519080825280602002602001820160405280156108a057816020015b61088d6110af565b8152602001906001900390816108855790505b50816080018190525060408051908101604052807f185484197e8084a6ae844a6609c064271363e5d21d1ec1d52063daf58404513781526020017f204a5fc3e50a2d973895dfcb28f0c0da009f03a5a13ff7f54d593ddec60b14b88152508160800151600081518110151561091157fe5b9060200190602002018190525060408051908101604052807f2f032c15074e640bf7a1ba49041a46ed70a3c8f5bdeefc47ce16bcaf840cd40881526020017f2ff9f486537155833ebf36e7b22c879c186b1389cf7f80eb650de1075cf8fcdc8152508160800151600181518110151561098657fe5b9060200190602002018190525060408051908101604052807f0572346c3f8966472c49262803ffa3320bb9077bc971f8ff3c8e6c0cef2acaa081526020017f0599e8d2f54cef6e2e3ddb6bb9112dd2cbf4f2a6991ff91378b37fda1a00a29c815250816080015160028151811015156109fb57fe5b9060200190602002018190525090565b610a13611095565b610a1b6110c9565b8360000151816000600381101515610a2f57fe5b6020020181815250508360200151816001600381101515610a4c57fe5b60200201818152505082816002600381101515610a6557fe5b6020020181815250506000606083608084600060076107d05a03f190508060008114610a9057610a92565bfe5b50801515610a9f57600080fd5b505092915050565b610aaf611095565b610ab76110ec565b8360000151816000600481101515610acb57fe5b6020020181815250508360200151816001600481101515610ae857fe5b6020020181815250508260000151816002600481101515610b0557fe5b6020020181815250508260200151816003600481101515610b2257fe5b602002018181525050600060608360c084600060066107d05a03f190508060008114610b4d57610b4f565bfe5b50801515610b5c57600080fd5b505092915050565b610b6c611095565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610ba9575060008360200151145b15610bcd576040805190810160405280600081526020016000815250915050610bfb565b604080519081016040528084600001518152602001828560200151811515610bf157fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015610c3f57816020015b610c2c6110af565b815260200190600190039081610c245790505b50905060606004604051908082528060200260200182016040528015610c7f57816020015b610c6c61110f565b815260200190600190039081610c645790505b5090508a826000815181101515610c9257fe5b9060200190602002018190525088826001815181101515610caf57fe5b9060200190602002018190525086826002815181101515610ccc57fe5b9060200190602002018190525084826003815181101515610ce957fe5b9060200190602002018190525089816000815181101515610d0657fe5b9060200190602002018190525087816001815181101515610d2357fe5b9060200190602002018190525085816002815181101515610d4057fe5b9060200190602002018190525083816003815181101515610d5d57fe5b90602001906020020181905250610d748282610d84565b9250505098975050505050505050565b600081518351141515610d9657600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015610dd55781602001602082028038833980820191505090505b50905060008090505b83811015610fb3578681815181101515610df457fe5b90602001906020020151600001518260006006840201815181101515610e1657fe5b90602001906020020181815250508681815181101515610e3257fe5b90602001906020020151602001518260016006840201815181101515610e5457fe5b90602001906020020181815250508581815181101515610e7057fe5b90602001906020020151600001516000600281101515610e8c57fe5b60200201518260026006840201815181101515610ea557fe5b90602001906020020181815250508581815181101515610ec157fe5b90602001906020020151600001516001600281101515610edd57fe5b60200201518260036006840201815181101515610ef657fe5b90602001906020020181815250508581815181101515610f1257fe5b90602001906020020151602001516000600281101515610f2e57fe5b60200201518260046006840201815181101515610f4757fe5b90602001906020020181815250508581815181101515610f6357fe5b90602001906020020151602001516001600281101515610f7f57fe5b60200201518260056006840201815181101515610f9857fe5b90602001906020020181815250508080600101915050610dde565b50610fbc611136565b60006020826020860260208601600060086107d05a03f190508060008114610fe357610fe5565bfe5b50801515610ff257600080fd5b600082600060018110151561100357fe5b602002015114159550505050505092915050565b6101006040519081016040528061102c6110af565b815260200161103961110f565b81526020016110466110af565b81525090565b6101e0604051908101604052806110616110af565b815260200161106e61110f565b815260200161107b61110f565b815260200161108861110f565b8152602001606081525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b608060405190810160405280611123611159565b8152602001611130611159565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b604080519081016040528060029060208202803883398082019150509050509056fea165627a7a7230582069c60035b6684f0cf913d92e5647884c858a35cd64920d54d0bbaec090dc2b2b0029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063621e9ec014610046575b600080fd5b34801561005257600080fd5b506101b2600480360361014081101561006a57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561011f578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100cb565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101cc565b604051808215151515815260200191505060405180910390f35b60006101d6611017565b60408051908101604052808760006002811015156101f057fe5b6020020151815260200187600160028110151561020957fe5b602002015181525081600001819052506040805190810160405280604080519081016040528088600060028110151561023e57fe5b6020020151600060028110151561025157fe5b6020020151815260200188600060028110151561026a57fe5b6020020151600160028110151561027d57fe5b6020020151815250815260200160408051908101604052808860016002811015156102a457fe5b602002015160006002811015156102b757fe5b602002015181526020018860016002811015156102d057fe5b602002015160016002811015156102e357fe5b60200201518152508152508160200181905250604080519081016040528085600060028110151561031057fe5b6020020151815260200185600160028110151561032957fe5b602002015181525081604001819052506060600260405190808252806020026020018201604052801561036b5781602001602082028038833980820191505090505b50905060008090505b60028110156103b957848160028110151561038b57fe5b6020020151828281518110151561039e57fe5b90602001906020020181815250508080600101915050610374565b5060006103c68284610474565b1415610465577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001807f5472616e73616374696f6e207375636365737366756c6c79207665726966696581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390a160019250505061046c565b6000925050505b949350505050565b600061047e61104c565b6104866105b1565b9050806080015151600185510114151561049f57600080fd5b6104a7611095565b6040805190810160405280600081526020016000815250905060008090505b855181101561052657610517826105128560800151600185018151811015156104eb57fe5b90602001906020020151898581518110151561050357fe5b90602001906020020151610a0b565b610aa7565b915080806001019150506104c6565b5061054d818360800151600081518110151561053e57fe5b90602001906020020151610aa7565b90506105938460000151856020015161056584610b64565b85604001516105778960400151610b64565b87606001516105898960000151610b64565b8960200151610c00565b15156105a4576001925050506105ab565b6000925050505b92915050565b6105b961104c565b60408051908101604052807f13f53406058f52746505e092bd1e714045ccf39e47d36ee129136b2c7ef7983981526020017f208528dd56e7018b9128fb7e98f0af698804635eccfd91e104d7776f90c8aa0f8152508160000181905250604080519081016040528060408051908101604052807f07af5170a88240e85dd4e0fdb594743a81e76ed92df4f5aa2588f1d7c8273e6e81526020017f13db7f385f56fbf7812c53ae09f3b747c5bde2b4cc1c3a5774e32a8799052642815250815260200160408051908101604052807f2252e63dad32f7b11ceef673419cecfd6626abc259c5b82b081ca3407367996d81526020017f2114d50485c56484852204bd4c5911ec61368e73cb285195bd1c200d3405787f8152508152508160200181905250604080519081016040528060408051908101604052807f1c8f78927b70448a5c6fbbf3eba1218cd5a61ee120a761951def863cd52b043d81526020017f01c33faf03dde880ea6bf3793b47ca49305270394b5b2fbb8815521e89e10cb4815250815260200160408051908101604052807f054a3917ea3b4d5e677164427fab7476ad059f82db7df037ff9678d561435c9481526020017f27efcefee3e2a23a871e4eebd141f908943a0eb9e5ebf45e39b971629ca08e638152508152508160400181905250604080519081016040528060408051908101604052807f1e6e877b990fcd78671eea9b49e3c5665efe2b4261a9eea559fd72d8f3d188ae81526020017f19f623c476e99915b85aa1db9ec91770763db371970bf5b574f981e71866939b815250815260200160408051908101604052807f01d5e8921f3bb9d95452e37bd32bd2d83b0c3cac2bfa95b13ab627a9410329a781526020017f2fb4c41ad9b75086dc8d58983085c44901138c1032cd71b79ec1da9484a48101815250815250816060018190525060036040519080825280602002602001820160405280156108a057816020015b61088d6110af565b8152602001906001900390816108855790505b50816080018190525060408051908101604052807f185484197e8084a6ae844a6609c064271363e5d21d1ec1d52063daf58404513781526020017f204a5fc3e50a2d973895dfcb28f0c0da009f03a5a13ff7f54d593ddec60b14b88152508160800151600081518110151561091157fe5b9060200190602002018190525060408051908101604052807f2f032c15074e640bf7a1ba49041a46ed70a3c8f5bdeefc47ce16bcaf840cd40881526020017f2ff9f486537155833ebf36e7b22c879c186b1389cf7f80eb650de1075cf8fcdc8152508160800151600181518110151561098657fe5b9060200190602002018190525060408051908101604052807f0572346c3f8966472c49262803ffa3320bb9077bc971f8ff3c8e6c0cef2acaa081526020017f0599e8d2f54cef6e2e3ddb6bb9112dd2cbf4f2a6991ff91378b37fda1a00a29c815250816080015160028151811015156109fb57fe5b9060200190602002018190525090565b610a13611095565b610a1b6110c9565b8360000151816000600381101515610a2f57fe5b6020020181815250508360200151816001600381101515610a4c57fe5b60200201818152505082816002600381101515610a6557fe5b6020020181815250506000606083608084600060076107d05a03f190508060008114610a9057610a92565bfe5b50801515610a9f57600080fd5b505092915050565b610aaf611095565b610ab76110ec565b8360000151816000600481101515610acb57fe5b6020020181815250508360200151816001600481101515610ae857fe5b6020020181815250508260000151816002600481101515610b0557fe5b6020020181815250508260200151816003600481101515610b2257fe5b602002018181525050600060608360c084600060066107d05a03f190508060008114610b4d57610b4f565bfe5b50801515610b5c57600080fd5b505092915050565b610b6c611095565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610ba9575060008360200151145b15610bcd576040805190810160405280600081526020016000815250915050610bfb565b604080519081016040528084600001518152602001828560200151811515610bf157fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015610c3f57816020015b610c2c6110af565b815260200190600190039081610c245790505b50905060606004604051908082528060200260200182016040528015610c7f57816020015b610c6c61110f565b815260200190600190039081610c645790505b5090508a826000815181101515610c9257fe5b9060200190602002018190525088826001815181101515610caf57fe5b9060200190602002018190525086826002815181101515610ccc57fe5b9060200190602002018190525084826003815181101515610ce957fe5b9060200190602002018190525089816000815181101515610d0657fe5b9060200190602002018190525087816001815181101515610d2357fe5b9060200190602002018190525085816002815181101515610d4057fe5b9060200190602002018190525083816003815181101515610d5d57fe5b90602001906020020181905250610d748282610d84565b9250505098975050505050505050565b600081518351141515610d9657600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015610dd55781602001602082028038833980820191505090505b50905060008090505b83811015610fb3578681815181101515610df457fe5b90602001906020020151600001518260006006840201815181101515610e1657fe5b90602001906020020181815250508681815181101515610e3257fe5b90602001906020020151602001518260016006840201815181101515610e5457fe5b90602001906020020181815250508581815181101515610e7057fe5b90602001906020020151600001516000600281101515610e8c57fe5b60200201518260026006840201815181101515610ea557fe5b90602001906020020181815250508581815181101515610ec157fe5b90602001906020020151600001516001600281101515610edd57fe5b60200201518260036006840201815181101515610ef657fe5b90602001906020020181815250508581815181101515610f1257fe5b90602001906020020151602001516000600281101515610f2e57fe5b60200201518260046006840201815181101515610f4757fe5b90602001906020020181815250508581815181101515610f6357fe5b90602001906020020151602001516001600281101515610f7f57fe5b60200201518260056006840201815181101515610f9857fe5b90602001906020020181815250508080600101915050610dde565b50610fbc611136565b60006020826020860260208601600060086107d05a03f190508060008114610fe357610fe5565bfe5b50801515610ff257600080fd5b600082600060018110151561100357fe5b602002015114159550505050505092915050565b6101006040519081016040528061102c6110af565b815260200161103961110f565b81526020016110466110af565b81525090565b6101e0604051908101604052806110616110af565b815260200161106e61110f565b815260200161107b61110f565b815260200161108861110f565b8152602001606081525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b608060405190810160405280611123611159565b8152602001611130611159565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b604080519081016040528060029060208202803883398082019150509050509056fea165627a7a7230582069c60035b6684f0cf913d92e5647884c858a35cd64920d54d0bbaec090dc2b2b0029",
  "sourceMap": "231:42:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:42:3;;;;;;;",
  "deployedSourceMap": "231:42:3:-;;;;;;;;;;;;;;;;;;;;;;;;23501:732:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23501:732:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23672:6;23690:18;;:::i;:::-;23728:27;;;;;;;;;23744:1;23746;23744:4;;;;;;;;;;;;;23728:27;;;;23750:1;23752;23750:4;;;;;;;;;;;;;23728:27;;;23718:5;:7;;:37;;;;23775:55;;;;;;;;;;;;;;;;;;23792:1;23794;23792:4;;;;;;;;;;;;;23797:1;23792:7;;;;;;;;;;;;;23775:55;;;;23801:1;23803;23801:4;;;;;;;;;;;;;23806:1;23801:7;;;;;;;;;;;;;23775:55;;;;;;;;;;;;;;;;23812:1;23814;23812:4;;;;;;;;;;;;;23817:1;23812:7;;;;;;;;;;;;;23775:55;;;;23821:1;23823;23821:4;;;;;;;;;;;;;23826:1;23821:7;;;;;;;;;;;;;23775:55;;;;;;23765:5;:7;;:65;;;;23850:27;;;;;;;;;23866:1;23868;23866:4;;;;;;;;;;;;;23850:27;;;;23872:1;23874;23872:4;;;;;;;;;;;;;23850:27;;;23840:5;:7;;:37;;;;23887:25;23926:12;23915:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23915:24:4;;;;23887:52;;23953:6;23962:1;23953:10;;23949:88;23969:12;23965:1;:16;23949:88;;;24018:5;24024:1;24018:8;;;;;;;;;;;;;24001:11;24013:1;24001:14;;;;;;;;;;;;;;;;;:25;;;;;23983:3;;;;;;;23949:88;;;;24080:1;24050:26;24057:11;24070:5;24050:6;:26::i;:::-;:31;24046:181;;;24102:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24169:4;24162:11;;;;;;24046:181;24211:5;24204:12;;;;23501:732;;;;;;;:::o;22740:726::-;22815:4;22831:22;;:::i;:::-;22856:14;:12;:14::i;:::-;22831:39;;22908:2;:11;;;:18;22903:1;22888:5;:12;:16;:38;22880:47;;;;;;;;22984:27;;:::i;:::-;23014:21;;;;;;;;;23030:1;23014:21;;;;23033:1;23014:21;;;22984:51;;23050:6;23059:1;23050:10;;23045:131;23066:5;:12;23062:1;:16;23045:131;;;23104:72;23121:4;23127:48;23146:2;:11;;;23162:1;23158;:5;23146:18;;;;;;;;;;;;;;;;;;23166:5;23172:1;23166:8;;;;;;;;;;;;;;;;;;23127:18;:48::i;:::-;23104:16;:72::i;:::-;23097:79;;23080:3;;;;;;;23045:131;;;;23193:38;23210:4;23216:2;:11;;;23228:1;23216:14;;;;;;;;;;;;;;;;;;23193:16;:38::i;:::-;23186:45;;23245:186;23280:5;:7;;;23289:5;:7;;;23311:20;23326:4;23311:14;:20::i;:::-;23333:2;:8;;;23356:23;23371:5;:7;;;23356:14;:23::i;:::-;23381:2;:8;;;23404:20;23419:2;:4;;;23404:14;:20::i;:::-;23426:2;:4;;;23245:20;:186::i;:::-;23244:187;23241:200;;;23440:1;23433:8;;;;;;23241:200;23458:1;23451:8;;;;22740:726;;;;;:::o;20795:1940::-;20842:22;;:::i;:::-;20883:169;;;;;;;;;20907:66;20883:169;;;;20984:66;20883:169;;;20876:2;:4;;:176;;;;21069:327;;;;;;;;;;;;;;;;;;21094:66;21069:327;;;;21171:66;21069:327;;;;;;;;;;;;;;;;21250:66;21069:327;;;;21327:66;21069:327;;;;;;21062:2;:4;;:334;;;;21417:327;;;;;;;;;;;;;;;;;;21442:66;21417:327;;;;21519:66;21417:327;;;;;;;;;;;;;;;;21598:66;21417:327;;;;21675:66;21417:327;;;;;;21406:2;:8;;:338;;;;21765:327;;;;;;;;;;;;;;;;;;21790:66;21765:327;;;;21867:66;21765:327;;;;;;;;;;;;;;;;21946:66;21765:327;;;;22023:66;21765:327;;;;;;21754:2;:8;;:338;;;;22138:1;22116:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22102:2;:11;;:38;;;;22167:169;;;;;;;;;22191:66;22167:169;;;;22268:66;22167:169;;;22150:2;:11;;;22162:1;22150:14;;;;;;;;;;;;;;;;;:186;;;;22363:169;;;;;;;;;22387:66;22363:169;;;;22464:66;22363:169;;;22346:2;:11;;;22358:1;22346:14;;;;;;;;;;;;;;;;;:186;;;;22559:169;;;;;;;;;22583:66;22559:169;;;;22660:66;22559:169;;;22542:2;:11;;;22554:1;22542:14;;;;;;;;;;;;;;;;;:186;;;;20795:1940;:::o;17339:444::-;17403:16;;:::i;:::-;17431:20;;:::i;:::-;17472:1;:3;;;17461:5;17467:1;17461:8;;;;;;;;;;;;:14;;;;;17496:1;:3;;;17485:5;17491:1;17485:8;;;;;;;;;;;;:14;;;;;17520:1;17509:5;17515:1;17509:8;;;;;;;;;;;;:12;;;;;17531;17630:4;17627:1;17621:4;17614:5;17611:1;17608;17601:4;17596:3;17592:14;17587:48;17576:59;;17712:7;17725:1;17720:20;;;;17705:35;;17720:20;17729:9;17705:35;;17768:7;17759:17;;;;;;;;17339:444;;;;;;:::o;16422:483::-;16496:16;;:::i;:::-;16524:20;;:::i;:::-;16565:2;:4;;;16554:5;16560:1;16554:8;;;;;;;;;;;;:15;;;;;16590:2;:4;;;16579:5;16585:1;16579:8;;;;;;;;;;;;:15;;;;;16615:2;:4;;;16604:5;16610:1;16604:8;;;;;;;;;;;;:15;;;;;16640:2;:4;;;16629:5;16635:1;16629:8;;;;;;;;;;;;:15;;;;;16654:12;16753:4;16750:1;16744:4;16737:5;16734:1;16731;16724:4;16719:3;16715:14;16710:48;16699:59;;16835:7;16848:1;16843:20;;;;16828:35;;16843:20;16852:9;16828:35;;16890:7;16882:16;;;;;;;;16422:483;;;;;;:::o;16033:340::-;16090:14;;:::i;:::-;16168:6;16177:77;16168:86;;16275:1;16268;:3;;;:8;:20;;;;;16287:1;16280;:3;;;:8;16268:20;16264:58;;;16309:13;;;;;;;;;16317:1;16309:13;;;;16320:1;16309:13;;;16302:20;;;;;16264:58;16339:27;;;;;;;;;16347:1;:3;;;16339:27;;;;16363:1;16357;:3;;;:7;;;;;;;;16352:1;:13;16339:27;;;16332:34;;;16033:340;;;;:::o;19905:547::-;20151:4;20167:19;20203:1;20189:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20167:38;;20215:19;20251:1;20237:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20215:38;;20271:2;20263;20266:1;20263:5;;;;;;;;;;;;;;;;;:10;;;;20291:2;20283;20286:1;20283:5;;;;;;;;;;;;;;;;;:10;;;;20311:2;20303;20306:1;20303:5;;;;;;;;;;;;;;;;;:10;;;;20331:2;20323;20326:1;20323:5;;;;;;;;;;;;;;;;;:10;;;;20351:2;20343;20346:1;20343:5;;;;;;;;;;;;;;;;;:10;;;;20371:2;20363;20366:1;20363:5;;;;;;;;;;;;;;;;;:10;;;;20391:2;20383;20386:1;20383:5;;;;;;;;;;;;;;;;;:10;;;;20411:2;20403;20406:1;20403:5;;;;;;;;;;;;;;;;;:10;;;;20430:15;20438:2;20442;20430:7;:15::i;:::-;20423:22;;;;19905:547;;;;;;;;;;:::o;17994:913::-;18071:4;18108:2;:9;18095:2;:9;:22;18087:31;;;;;;;;18128:13;18144:2;:9;18128:25;;18163:14;18191:1;18180:8;:12;18163:29;;18202:19;18235:9;18224:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18224:21:4;;;;18202:43;;18260:6;18269:1;18260:10;;18255:307;18276:8;18272:1;:12;18255:307;;;18332:2;18335:1;18332:5;;;;;;;;;;;;;;;;;;:7;;;18313:5;18327:1;18323;18319;:5;:9;18313:16;;;;;;;;;;;;;;;;;:26;;;;;18372:2;18375:1;18372:5;;;;;;;;;;;;;;;;;;:7;;;18353:5;18367:1;18363;18359;:5;:9;18353:16;;;;;;;;;;;;;;;;;:26;;;;;18412:2;18415:1;18412:5;;;;;;;;;;;;;;;;;;:7;;;18420:1;18412:10;;;;;;;;;;;;;18393:5;18407:1;18403;18399;:5;:9;18393:16;;;;;;;;;;;;;;;;;:29;;;;;18455:2;18458:1;18455:5;;;;;;;;;;;;;;;;;;:7;;;18463:1;18455:10;;;;;;;;;;;;;18436:5;18450:1;18446;18442;:5;:9;18436:16;;;;;;;;;;;;;;;;;:29;;;;;18498:2;18501:1;18498:5;;;;;;;;;;;;;;;;;;:7;;;18506:1;18498:10;;;;;;;;;;;;;18479:5;18493:1;18489;18485;:5;:9;18479:16;;;;;;;;;;;;;;;;;:29;;;;;18541:2;18544:1;18541:5;;;;;;;;;;;;;;;;;;:7;;;18549:1;18541:10;;;;;;;;;;;;;18522:5;18536:1;18532;18528;:5;:9;18522:16;;;;;;;;;;;;;;;;;:29;;;;;18286:3;;;;;;;18255:307;;;;18571:18;;:::i;:::-;18599:12;18727:4;18722:3;18715:4;18704:9;18700:20;18693:4;18686:5;18682:16;18679:1;18676;18669:4;18664:3;18660:14;18655:77;18644:88;;18809:7;18822:1;18817:20;;;;18802:35;;18817:20;18826:9;18802:35;;18864:7;18856:16;;;;;;;;18899:1;18889:3;18893:1;18889:6;;;;;;;;;;;;;:11;;18882:18;;;;;;;17994:913;;;;:::o;231:42:3:-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;231:42:3;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;231:42:3;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;231:42:3;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;231:42:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\r\n\r\n import './ERC721Mintable.sol';\r\n import './zokrates/code/square/verifier.sol';\r\n \r\n\r\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\r\n contract SquareVerifier is Verifier{\r\n\r\n }\r\n\r\n// TODO define another contract named SolnSquareVerifier that inherits ERC721Mintable\r\n\r\ncontract SolnSquareVerifier is  CustomERC721Token {\r\n // TODO define a solutions struct that can hold index, address, and image\r\nstruct Solution{\r\n   string index;\r\n   address solutionsAddress;\r\n   string image;\r\n  }\r\n\r\n// TODO define an array of the above struct\r\n  address[] private solutions;   \r\n  \r\n  // TODO define a mapping to store unique solutions submitted\r\n  mapping(address => Solution) public SolutionStored;\r\n\r\n// TODO Create an event to emit when a solution is added\r\n  event solutionAdded(address _solution);\r\n\r\n\r\n  // TODO Create a function to add the solutions to the array and emit the event\r\n    function AddSoutions(address _solution) public{\r\n     \r\n      solutions.push(_solution);\r\n      emit  solutionAdded(_solution);\r\n    }\r\n\r\n  // TODO Create a function to mint new NFT only after the solution has been verified\r\n  //  - make sure the solution is unique (has not been used before)\r\n  //  - make sure you handle metadata as well as tokenSuplly\r\n  function mint(address _solution,uint256 tokenSuplly)public {\r\n             require(_solution == SolutionStored[_solution].solutionsAddress);              \r\n              mint(_solution,tokenSuplly);\r\n  }\r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "sourcePath": "D:/repo/blockchain_real_state_marketplace/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7599
      ],
      "SquareVerifier": [
        7540
      ]
    },
    "id": 7600,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7535,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7536,
        "nodeType": "ImportDirective",
        "scope": 7600,
        "sourceUnit": 1209,
        "src": "37:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/zokrates/code/square/verifier.sol",
        "file": "./zokrates/code/square/verifier.sol",
        "id": 7537,
        "nodeType": "ImportDirective",
        "scope": 7600,
        "sourceUnit": 10195,
        "src": "70:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7538,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10194,
              "src": "258:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10194",
                "typeString": "contract Verifier"
              }
            },
            "id": 7539,
            "nodeType": "InheritanceSpecifier",
            "src": "258:8:3"
          }
        ],
        "contractDependencies": [
          10194
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7540,
        "linearizedBaseContracts": [
          7540,
          10194
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7600,
        "src": "231:42:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7541,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1208,
              "src": "398:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1208",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7542,
            "nodeType": "InheritanceSpecifier",
            "src": "398:17:3"
          }
        ],
        "contractDependencies": [
          173,
          1208,
          1045,
          940,
          127,
          642,
          86,
          7533
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 7599,
        "linearizedBaseContracts": [
          7599,
          1208,
          1045,
          7533,
          940,
          642,
          173,
          127,
          86
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7549,
            "members": [
              {
                "constant": false,
                "id": 7544,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "516:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7543,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7546,
                "name": "solutionsAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "534:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7545,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7548,
                "name": "image",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "564:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7547,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "564:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7599,
            "src": "495:87:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7552,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7599,
            "src": "633:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7550,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7551,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "633:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7556,
            "name": "SolutionStored",
            "nodeType": "VariableDeclaration",
            "scope": 7599,
            "src": "736:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7555,
              "keyType": {
                "id": 7553,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "736:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7554,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7549,
                "src": "755:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7549_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7560,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7558,
                  "indexed": false,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7560,
                  "src": "871:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "870:19:3"
            },
            "src": "851:39:3"
          },
          {
            "body": {
              "id": 7575,
              "nodeType": "Block",
              "src": "1028:88:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7568,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1059:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7565,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7552,
                        "src": "1044:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1044:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 7569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7570,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:25:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7572,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1098:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7571,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7560,
                      "src": "1084:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7574,
                  "nodeType": "EmitStatement",
                  "src": "1078:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AddSoutions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7562,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "1003:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:19:3"
            },
            "returnParameters": {
              "id": 7564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:3"
            },
            "scope": 7599,
            "src": "982:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7597,
              "nodeType": "Block",
              "src": "1399:144:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7584,
                          "name": "_solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7578,
                          "src": "1423:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7585,
                              "name": "SolutionStored",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7556,
                              "src": "1436:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7587,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7586,
                              "name": "_solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7578,
                              "src": "1451:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1436:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7549_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "solutionsAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7546,
                          "src": "1436:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1423:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10424,
                        10425
                      ],
                      "referencedDeclaration": 10424,
                      "src": "1415:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7591,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7593,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "1515:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7594,
                        "name": "tokenSuplly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1525:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7592,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7598,
                        1102
                      ],
                      "referencedDeclaration": 7598,
                      "src": "1510:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7596,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:27:3"
                }
              ]
            },
            "documentation": null,
            "id": 7598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7578,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7598,
                  "src": "1354:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7580,
                  "name": "tokenSuplly",
                  "nodeType": "VariableDeclaration",
                  "scope": 7598,
                  "src": "1372:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:39:3"
            },
            "returnParameters": {
              "id": 7582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:3"
            },
            "scope": 7599,
            "src": "1340:203:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7600,
        "src": "366:1180:3"
      }
    ],
    "src": "0:1641:3"
  },
  "legacyAST": {
    "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7599
      ],
      "SquareVerifier": [
        7540
      ]
    },
    "id": 7600,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7535,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7536,
        "nodeType": "ImportDirective",
        "scope": 7600,
        "sourceUnit": 1209,
        "src": "37:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/repo/blockchain_real_state_marketplace/contracts/zokrates/code/square/verifier.sol",
        "file": "./zokrates/code/square/verifier.sol",
        "id": 7537,
        "nodeType": "ImportDirective",
        "scope": 7600,
        "sourceUnit": 10195,
        "src": "70:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7538,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10194,
              "src": "258:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10194",
                "typeString": "contract Verifier"
              }
            },
            "id": 7539,
            "nodeType": "InheritanceSpecifier",
            "src": "258:8:3"
          }
        ],
        "contractDependencies": [
          10194
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7540,
        "linearizedBaseContracts": [
          7540,
          10194
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7600,
        "src": "231:42:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7541,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1208,
              "src": "398:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1208",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7542,
            "nodeType": "InheritanceSpecifier",
            "src": "398:17:3"
          }
        ],
        "contractDependencies": [
          173,
          1208,
          1045,
          940,
          127,
          642,
          86,
          7533
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 7599,
        "linearizedBaseContracts": [
          7599,
          1208,
          1045,
          7533,
          940,
          642,
          173,
          127,
          86
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7549,
            "members": [
              {
                "constant": false,
                "id": 7544,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "516:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7543,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7546,
                "name": "solutionsAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "534:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7545,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7548,
                "name": "image",
                "nodeType": "VariableDeclaration",
                "scope": 7549,
                "src": "564:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7547,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "564:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7599,
            "src": "495:87:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7552,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7599,
            "src": "633:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7550,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7551,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "633:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7556,
            "name": "SolutionStored",
            "nodeType": "VariableDeclaration",
            "scope": 7599,
            "src": "736:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7555,
              "keyType": {
                "id": 7553,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "736:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7554,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7549,
                "src": "755:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7549_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7560,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7558,
                  "indexed": false,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7560,
                  "src": "871:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "870:19:3"
            },
            "src": "851:39:3"
          },
          {
            "body": {
              "id": 7575,
              "nodeType": "Block",
              "src": "1028:88:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7568,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1059:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7565,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7552,
                        "src": "1044:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1044:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 7569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7570,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:25:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7572,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1098:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7571,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7560,
                      "src": "1084:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7574,
                  "nodeType": "EmitStatement",
                  "src": "1078:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AddSoutions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7562,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "1003:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:19:3"
            },
            "returnParameters": {
              "id": 7564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:3"
            },
            "scope": 7599,
            "src": "982:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7597,
              "nodeType": "Block",
              "src": "1399:144:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7584,
                          "name": "_solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7578,
                          "src": "1423:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7585,
                              "name": "SolutionStored",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7556,
                              "src": "1436:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7549_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7587,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7586,
                              "name": "_solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7578,
                              "src": "1451:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1436:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7549_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "solutionsAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7546,
                          "src": "1436:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1423:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10424,
                        10425
                      ],
                      "referencedDeclaration": 10424,
                      "src": "1415:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7591,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7593,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "1515:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7594,
                        "name": "tokenSuplly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1525:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7592,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7598,
                        1102
                      ],
                      "referencedDeclaration": 7598,
                      "src": "1510:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7596,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:27:3"
                }
              ]
            },
            "documentation": null,
            "id": 7598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7578,
                  "name": "_solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7598,
                  "src": "1354:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7580,
                  "name": "tokenSuplly",
                  "nodeType": "VariableDeclaration",
                  "scope": 7598,
                  "src": "1372:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:39:3"
            },
            "returnParameters": {
              "id": 7582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:3"
            },
            "scope": 7599,
            "src": "1340:203:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7600,
        "src": "366:1180:3"
      }
    ],
    "src": "0:1641:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-24T11:53:33.456Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}